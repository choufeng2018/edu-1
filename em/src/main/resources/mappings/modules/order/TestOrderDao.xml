<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.order.dao.TestOrderDao">
    
	<sql id="testOrderColumns">
		a.id AS "id",
		a.code AS "code",
		a.price AS "price",
		a.custom AS "custom",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="testOrderJoins">
	</sql>
	
    
	<select id="get" resultType="TestOrder" >
		SELECT 
			<include refid="testOrderColumns"/>
		FROM test_order a
		<include refid="testOrderJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="TestOrder" >
		SELECT 
			<include refid="testOrderColumns"/>
		FROM test_order a
		<include refid="testOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="custom != null and custom != ''">
				AND a.custom = #{custom}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="TestOrder" >
		SELECT 
			<include refid="testOrderColumns"/>
		FROM test_order a
		<include refid="testOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO test_order(
			id,
			code,
			price,
			custom,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{code},
			#{price},
			#{custom},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE test_order SET 	
			code = #{code},
			price = #{price},
			custom = #{custom},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM test_order
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE test_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="TestOrder" statementType="STATEMENT">
		select * FROM test_order  where ${propertyName} = '${value}'
	</select>
	
</mapper>