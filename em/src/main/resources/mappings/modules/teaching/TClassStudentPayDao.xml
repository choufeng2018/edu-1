<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.teaching.dao.TClassStudentPayDao">
    
	<sql id="tClassStudentPayColumns">
		a.id AS "id",
		a.school_id AS "schoolId",
		a.campus_id AS "campusId",
		a.cs_id AS "cs.id",
		a.student_id AS "student.id",
		a.paytype AS "paytype",
		a.zks AS "zks",
		a.ywcks AS "ywcks",
		a.amount AS "amount",
		a.balance AS "balance",
		a.e_id AS "cc.id",
		a.e_name AS "cc.name",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="tClassStudentPayJoins">
	</sql>
	
	<select id="get" resultType="TClassStudentPay" >
		SELECT 
			<include refid="tClassStudentPayColumns"/>
		FROM t_class_student_pay a
		<include refid="tClassStudentPayJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="TClassStudentPay" >
		SELECT 
			<include refid="tClassStudentPayColumns"/>
		FROM t_class_student_pay a
		<include refid="tClassStudentPayJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL} and a.cs_id = #{cs.id}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="TClassStudentPay" >
		SELECT 
			<include refid="tClassStudentPayColumns"/>
		FROM t_class_student_pay a
		<include refid="tClassStudentPayJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO t_class_student_pay(
			school_id,
			campus_id,
			cs_id,
			student_id,
			paytype,
			zks,
			ywcks,
			amount,
			balance,
			e_id ,
			e_name,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{schoolId},
			#{campusId},
			#{cs.id},
			#{studentId},
			#{paytype},
			#{zks},
			#{ywcks},
			#{amount},
			#{balance},
			#{cc.id},
			#{cc.name},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE t_class_student_pay SET 	
			paytype = #{paytype},
			zks = #{zks},
			ywcks = #{ywcks},
			amount = #{amount},
			balance = #{balance},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM t_class_student_pay
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE t_class_student_pay SET del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="TClassStudentPay" statementType="STATEMENT">
		select * FROM t_class_student_pay  where ${propertyName} = '${value}'
	</select>
	
</mapper>